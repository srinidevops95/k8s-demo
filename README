1. Nodes:
    $ kubectl get no
    $ kubectl get no -o wide
    $ kubectl describe no
    $ kubectl get no -o yaml
    $ kubectl get node –select or =[ label _name]
    $ kubectl get nodes 
    $ kubectl top node [node_name]

2. Pods
    $ kubectl get po
    $ kubectl get po -o wide
    $ kubectl describe po
    $ kubectl get po –show-labels
    $ kubectl get po -l app=nginx
    $ kubectl get po -o yaml
    $ kubect l get pod [ pod_name] -o yaml –export
    $ kubect l get pod [pod_name] -o yaml –export > name.yaml
    $ kubectl get pods –field-selector status.phase=Running

3. Namespaces
    $ kubectl get ns
    $ kubectl get ns -o yaml
    $ kubectl describe ns

4. Deployments
    $ kubectl get deploy
    $ kubectl describe deploy
    $ kubectl get deploy -o wide
    $ kubectl get deploy -o yam

5. Services
    $ kubectl get svc
    $ kubectl describe svc
    $ kubectl get svc -o wide
    $ kubectl get svc -o yaml
    $ kubectl get svc –show-labels

6. DaemonSets
    $ kubectl get ds
    $ kubectl get ds –all-namespaces
    $ kubectl describe ds [daemonset _name] -n [namespace_name]
    $ kubectl get ds [ds_name] -n [ns_name] -o yaml

7. Events
    $ kubectl get events
    $ kubectl get events -n kube-system
    $ kubectl get events -w

8. Logs
    $ kubectl logs [pod_name]
    $ kubectl logs –since=1h [pod_name]
    $ kubectl logs –tail =20 [pod_name]
    $ kubectl logs -f -c [container_name] [pod_name]
    $ kubectl logs [pod_name] > pod.log

9. Service Accounts
    $ kubectl get sa
    $ kubectl get sa -o yaml
    $ kubectl get serviceaccounts default -o yaml > ./sa.yaml
    $ kubectl replace serviceaccount default -f. /sa.yaml

10. ReplicaSets
    $ kubectl get rs
    $ kubectl describe rs
    $ kubectl get rs -o wide
    $ kubectl get rs -o yaml

11. Roles
    $ kubectl get roles –all-namespaces
    $ kubectl get roles –all-namespaces -o yaml

12. Secrets
    $ kubectl get secrets
    $ kubectl get secrets –all-namespaces
    $ kubectl get secrets -o yaml

13. ConfigMaps
    $ kubectl get cm
    $ kubectl get cm –all-namespaces
    $ kubectl get cm –all-namespaces -o yaml

14. Ingress
    $ kubectl get ing
    $ kubectl get ing –all-namespaces

15. PersistentVolume
    $ kubectl get pv
    $ kubectl describe pv

16. PersistentVolumeClaim
    $ kubectl get pvc
    $ kubectl describe pvc

17. StorageClass
    $ kubectl get sc
    $ kubectl get sc -o yaml

18. MultipleResources
    $ kubectl get svc, po
    $ kubectl get deploy, no
    $ kubectl get all$ kubectl get all –all-namespaces

19. Changing Resource Attributes
Taint
$ kubectl taint [node_name] [taint _name]

20. Labels
  $ kubectl label [node_name] disktype=ssd
  $ kubrectl label [pod_name] env=prod

21. Cordon/Uncordon
  $ kubectl cordon [node_name]
  $ kubectl uncordon [node_name]

22. Drain
$ kubectl drain [node_name]

23. Nodes/Pods
    $ kubectl delete node [node_name]
    $ kubectl delete pod [pod_name]
    $ kubectl edit node [node_name]$ kubectl edit pod [pod_name]

24. Deployments/Namespaces
    $ kubectl edit deploy [deploy_name]
    $ kubectl delete deploy [deploy_name]
    $ kubectl expose deploy [depl oy_name] –port=80 –type=NodePort
    $ kubectl scale deploy [deploy_name] –replicas=5
    $ kubectl delete ns$ kubectl edit ns [ns_name]

25. Services
    $ kubectl edit svc [svc_name]
    $ kubectl delete svc [svc_name]

26. DaemonSets
    $ kubectl edit ds [ds_name] -n kube-system
    $ kubectl delete ds [ds_name]

27. ServiceAccounts
    $ kubectl edit sa [sa_name]
    $ kubectl delete sa [sa_name]

28. Annotate
    $ kubectl annotate po [pod_name] [annotation]
    $ kubectl annotate no [node_name]

Adding Resources
29. Creating a Pod
    $ kubectl create -f [name_of _file]
    $ kubectl apply -f [name_of _file]
    $ kubectl run [pod_name] –image=ngi nx –restart=Never
    $ kubectl run [ pod_name] –generator =run-pod/v1 –image=nginx
    $ kubectl run [ pod_name] –image=nginx –restart=Never

30. Creating a Service
    $ kubectl create svc nodeport [svc_name] –tcp=8080:80

31. Creating a Deployment
    $ kubectl create -f [name_of _file]
    $ kubectl apply -f [name_of _file]
    $ kubectl create deploy [deploy_name] –image=ngi nx

Interactive Pod
$ kubectl run [pod_name] –image=busybox –rm -it –restart=Never — sh

Output YAMLto aFile
$ kubectl create deploy [deploy_name] –image=ngi nx –dry-run -o yaml > deploy.yaml
$ kubectl get po [pod_name] -o yaml –export > pod. yaml

Getting Help
    $ kubectl -h$ kubectl create -h
    $ kubectl run -h
    $ kubectl explain deploy.spec

Requests
API Call
    $ kubectl get –raw /apis/metrics.k8s.io/

Cluster Info
    $ kubectl config
    $ kubectl cluster -info
    $ kubectl get componentstatuses

